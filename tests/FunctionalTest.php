<?php
declare(strict_types=1);

namespace Test;

use Dogsy\Helpers\FileHelper;
use Dogsy\Repositories\FileTextRepository;
use Dogsy\Repositories\FileUserRepository;
use Dogsy\Services\TextService;
use Dotenv\Dotenv;
use PHPUnit\Framework\TestCase;


class FunctionalTest extends TestCase
{
    const SEPARATOR = ',';

    protected function setUp()
    {
        $dotenv = Dotenv::create(__DIR__, '../.env.test');
        $dotenv->overload();
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    public function testCountAverageLineCount(): void
    {
        $items = (new TextService(new FileUserRepository(self::SEPARATOR), new FileTextRepository()))
            ->countAverageLineCount();

        $this->assertEquals((float)'2.5', $items[1]['count']);
        $this->assertEquals(0, $items[2]['count']);
        $this->assertEquals(4, $items[33]['count']);

        $this->assertEquals('Sergey', $items[1]['name']);
        $this->assertEquals('Nikita', $items[2]['name']);
        $this->assertEquals('Petr', $items[33]['name']);
    }

    public function testReplaceDates(): void
    {
        $items = (new TextService(
            new FileUserRepository(self::SEPARATOR),
            new FileTextRepository())
        )
            ->replaceDates();

        FileHelper::prepareFolder(getenv('EXPECTED_PATH'));

        $this->assertEquals(
            FileHelper::readFile(getenv('EXPECTED_PATH') . '/1_0032.txt'),
            FileHelper::readFile(getenv('RESULT_PATH') . '/1_0032.txt')
        );

        $this->assertEquals(
            FileHelper::readFile(getenv('EXPECTED_PATH') . '/1_034.txt'),
            FileHelper::readFile(getenv('RESULT_PATH') . '/1_034.txt')
        );

        $this->assertEquals(
            FileHelper::readFile(getenv('EXPECTED_PATH') . '/33_0343.txt'),
            FileHelper::readFile(getenv('RESULT_PATH') . '/33_0343.txt')
        );

        $this->assertEquals(5, $items[1]['count']);
        $this->assertEquals(0, $items[2]['count']);
        $this->assertEquals(3, $items[33]['count']);

    }

}